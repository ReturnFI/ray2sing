name: Build and Release

on:
  push:
    branches: [ main, master ]
    paths:
      - 'Version'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows]
        goarch: [amd64, arm64]
        include:
          - goos: linux
            format: tar.gz
          - goos: windows
            format: zip

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Read version
        id: version
        run: echo "VERSION=$(cat Version)" >> $GITHUB_OUTPUT

      - name: Build ray2sing binary
        run: |
          cd cmd
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o ray2sing${{ matrix.goos == 'windows' && '.exe' || '' }} .

      - name: Package for Linux
        if: matrix.goos == 'linux'
        run: |
          mkdir -p release
          tar -czvf release/ray2sing-${{ steps.version.outputs.VERSION }}-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz -C cmd ray2sing

      - name: Package for Windows
        if: matrix.goos == 'windows'
        run: |
          mkdir -p release
          cd cmd
          zip -j ../release/ray2sing-${{ steps.version.outputs.VERSION }}-${{ matrix.goos }}-${{ matrix.goarch }}.zip ray2sing.exe

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ray2sing-${{ steps.version.outputs.VERSION }}-${{ matrix.goos }}-${{ matrix.goarch }}
          path: release/*
          retention-days: 7

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read version
        id: version
        run: echo "VERSION=$(cat Version)" >> $GITHUB_OUTPUT

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release

      - name: Flatten directory structure
        run: |
          mkdir -p flat
          find release -type f -exec cp {} flat/ \;

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.VERSION }}
          name: Release v${{ steps.version.outputs.VERSION }}
          draft: false
          prerelease: false
          files: flat/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
